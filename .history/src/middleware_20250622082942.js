import { NextResponse } from 'next/server'  export function middleware(request) {   const { pathname } = request.nextUrl      // Rewrite root path to /index   if (pathname === '/') {     return NextResponse.rewrite(new URL('/index', request.url))   }      // Danh sách các trang cần đăng nhập - cập nhật theo project của bạn   const protectedPaths = ['/dashboard', '/profile', '/settings', '/admin',     '/chats', '/notifications', '/posts', '/friends', '/groups',      '/events', '/messages', '/search', '/bookmarks', '/stories']      // Check nếu đang truy cập trang cần đăng nhập   const isProtectedPath = protectedPaths.some(path =>      pathname.startsWith(path)   )      if (isProtectedPath) {     // Lấy token và userId từ cookie (được sync từ api interceptor)     const token = request.cookies.get('token')?.value     const userId = request.cookies.get('userId')?.value          // Nếu không có token hoặc userId, redirect đến trang đăng nhập     if (!token || !userId) {       const loginUrl = new URL('/register', request.url)       loginUrl.searchParams.set('redirect', pathname) // Lưu trang muốn truy cập để redirect sau khi đăng nhập       return NextResponse.redirect(loginUrl)     }          // Optional: Kiểm tra token có hợp lệ không (basic check)     if (token) {       try {         const [, payloadBase64] = token.split('.');         const payload = JSON.parse(atob(payloadBase64));         const now = Math.floor(Date.now() / 1000);                  // Nếu token đã hết hạn, redirect về login         if (payload.exp && payload.exp <= now) {           const loginUrl = new URL('/register', request.url)           loginUrl.searchParams.set('redirect', pathname)           return NextResponse.redirect(loginUrl)         }       } catch (error) {         // Token không hợp lệ, redirect về login         const loginUrl = new URL('/register', request.url)         loginUrl.searchParams.set('redirect', pathname)         return NextResponse.redirect(loginUrl)       }     }   }      return NextResponse.next() }  export const config = {   matcher: '/((?!api|_next/static|_next/image|favicon.ico|register|login).*)', }