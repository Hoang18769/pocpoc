"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("app/(home)/layout",{

/***/ "(app-pages-browser)/./src/hooks/useMessageNotification.js":
/*!*********************************************!*\
  !*** ./src/hooks/useMessageNotification.js ***!
  \*********************************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": function() { return /* binding */ useMessageNotification; }\n/* harmony export */ });\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react/jsx-dev-runtime */ \"(app-pages-browser)/./node_modules/next/dist/compiled/react/jsx-dev-runtime.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! react */ \"(app-pages-browser)/./node_modules/next/dist/compiled/react/index.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var _utils_socket__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @/utils/socket */ \"(app-pages-browser)/./src/utils/socket.js\");\n/* harmony import */ var react_hot_toast__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! react-hot-toast */ \"(app-pages-browser)/./node_modules/react-hot-toast/dist/index.mjs\");\n/* harmony import */ var _store_ZustandStore__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @/store/ZustandStore */ \"(app-pages-browser)/./src/store/ZustandStore.js\");\n/* harmony import */ var _utils_axios__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @/utils/axios */ \"(app-pages-browser)/./src/utils/axios.js\");\n/* harmony import */ var next_navigation__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! next/navigation */ \"(app-pages-browser)/./node_modules/next/dist/api/navigation.js\");\n/* __next_internal_client_entry_do_not_use__ default auto */ \nvar _s = $RefreshSig$();\n\n\n\n\n\n\nfunction useMessageNotification(userId) {\n    _s();\n    const subscriptionRef = (0,react__WEBPACK_IMPORTED_MODULE_1__.useRef)(null);\n    const clientRef = (0,react__WEBPACK_IMPORTED_MODULE_1__.useRef)(null);\n    const healthCheckRef = (0,react__WEBPACK_IMPORTED_MODULE_1__.useRef)(null);\n    const [currentUserId, setCurrentUserId] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(null);\n    const [connectionStatus, setConnectionStatus] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(\"disconnected\");\n    const router = (0,next_navigation__WEBPACK_IMPORTED_MODULE_6__.useRouter)();\n    // Store actions\n    const { fetchChatList, onMessageReceived, onChatCreated, selectChat } = (0,_store_ZustandStore__WEBPACK_IMPORTED_MODULE_4__[\"default\"])();\n    (0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)(()=>{\n        const uid = localStorage.getItem(\"userId\");\n        if (uid) setCurrentUserId(uid);\n    }, []);\n    // Hàm helper để cập nhật chatList\n    const updateChatList = (newMessage, chatId)=>{\n        console.log(\"\\uD83D\\uDD04 Processing message for chatList:\", newMessage);\n        const { chatList } = _store_ZustandStore__WEBPACK_IMPORTED_MODULE_4__[\"default\"].getState();\n        console.log(\"\\uD83D\\uDCDC Current chatList:\", chatList);\n        const foundChat = chatList.find((c)=>c.chatId === chatId);\n        if (foundChat) {\n            const updatedChat = {\n                ...foundChat,\n                latestMessage: {\n                    id: newMessage.id,\n                    content: newMessage.content,\n                    sentAt: newMessage.sentAt,\n                    sender: newMessage.sender,\n                    messageType: newMessage.messageType,\n                    attachment: newMessage.attachment,\n                    attachments: newMessage.attachments,\n                    deleted: newMessage.deleted || false\n                },\n                updatedAt: newMessage.sentAt,\n                notReadMessageCount: (foundChat.notReadMessageCount || 0) + (newMessage.isOwnMessage ? 0 : 1)\n            };\n            const otherChats = chatList.filter((c)=>c.chatId !== chatId);\n            const newChatList = [\n                ...otherChats,\n                updatedChat\n            ].sort((a, b)=>new Date(b.updatedAt).getTime() - new Date(a.updatedAt).getTime());\n            _store_ZustandStore__WEBPACK_IMPORTED_MODULE_4__[\"default\"].setState({\n                chatList: newChatList.map((chat)=>({\n                        ...chat\n                    }))\n            });\n            console.log(\"✅ ChatList updated successfully!\");\n        } else {\n            console.warn(\"⚠️ Kh\\xf4ng t\\xecm thấy chat với chatId: \".concat(chatId));\n        }\n    };\n    // Message handler\n    const handleMessage = (0,react__WEBPACK_IMPORTED_MODULE_1__.useCallback)(async (messageData)=>{\n        if (!messageData) return;\n        console.log(\"\\uD83D\\uDCE8 New message received:\", messageData);\n        try {\n            var _messageData_sender;\n            // Command xử lý riêng\n            if (messageData.command === \"DELETE\") {\n                (0,react_hot_toast__WEBPACK_IMPORTED_MODULE_3__.toast)(\"\\uD83D\\uDDD1️ Tin nhắn đ\\xe3 bị x\\xf3a\", {\n                    duration: 3000,\n                    position: \"top-right\"\n                });\n                return;\n            }\n            if (messageData.command === \"EDIT\") {\n                var _messageData_sender1, _messageData_sender2, _messageData_sender3;\n                const senderName = ((_messageData_sender1 = messageData.sender) === null || _messageData_sender1 === void 0 ? void 0 : _messageData_sender1.username) || ((_messageData_sender2 = messageData.sender) === null || _messageData_sender2 === void 0 ? void 0 : _messageData_sender2.givenName) || \"ai đ\\xf3\";\n                if (((_messageData_sender3 = messageData.sender) === null || _messageData_sender3 === void 0 ? void 0 : _messageData_sender3.id) !== currentUserId) {\n                    (0,react_hot_toast__WEBPACK_IMPORTED_MODULE_3__.toast)(\"✏️ \".concat(senderName, \" đ\\xe3 chỉnh sửa tin nhắn\"), {\n                        duration: 3000,\n                        position: \"top-right\"\n                    });\n                }\n                return;\n            }\n            const newMessage = {\n                ...messageData,\n                isOwnMessage: ((_messageData_sender = messageData.sender) === null || _messageData_sender === void 0 ? void 0 : _messageData_sender.id) === currentUserId\n            };\n            // Cập nhật chat list\n            if (messageData.chatId) {\n                requestAnimationFrame(()=>{\n                    updateChatList(newMessage, messageData.chatId);\n                });\n            }\n            // Toast thông báo kèm click handler\n            if (messageData.sender && messageData.content && !newMessage.isOwnMessage) {\n                const senderName = messageData.sender.username || messageData.sender.givenName || \"ai đ\\xf3\";\n                (0,react_hot_toast__WEBPACK_IMPORTED_MODULE_3__.toast)((t)=>/*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                        onClick: ()=>{\n                            selectChat(messageData.chatId);\n                            router.push(\"/chats\");\n                            react_hot_toast__WEBPACK_IMPORTED_MODULE_3__.toast.dismiss(t.id);\n                        },\n                        className: \"cursor-pointer\",\n                        children: [\n                            \"\\uD83D\\uDCAC \",\n                            senderName,\n                            \": \",\n                            messageData.content\n                        ]\n                    }, void 0, true, {\n                        fileName: \"F:\\\\LVTN2025\\\\social-media-app\\\\src\\\\hooks\\\\useMessageNotification.js\",\n                        lineNumber: 112,\n                        columnNumber: 13\n                    }, this), {\n                    duration: 4000,\n                    position: \"top-right\"\n                });\n            }\n            if (onMessageReceived) {\n                onMessageReceived(messageData);\n            }\n            window.dispatchEvent(new CustomEvent(\"newMessageReceived\", {\n                detail: messageData\n            }));\n        } catch (error) {\n            console.error(\"❌ Failed to process message:\", error);\n        }\n    }, [\n        currentUserId,\n        selectChat,\n        router,\n        onMessageReceived\n    ]);\n    // Subscribe to messages - chỉ gọi khi client đã connected\n    const subscribeToMessages = (client)=>{\n        if (!client || !client.connected || !userId) {\n            console.warn(\"⚠️ Cannot subscribe: client not ready or userId missing\");\n            return;\n        }\n        try {\n            console.log(\"\\uD83D\\uDCE1 Subscribing to /message/\".concat(userId));\n            // Unsubscribe previous subscription if exists\n            if (subscriptionRef.current) {\n                subscriptionRef.current.unsubscribe();\n                subscriptionRef.current = null;\n            }\n            subscriptionRef.current = client.subscribeToChannel(\"/message/\".concat(userId), (message)=>{\n                try {\n                    const messageData = JSON.parse(message.body);\n                    handleMessage(messageData);\n                } catch (error) {\n                    console.error(\"❌ Parse message error:\", error);\n                }\n            });\n            console.log(\"✅ Successfully subscribed to /message/\".concat(userId));\n        } catch (error) {\n            console.error(\"❌ Failed to subscribe to messages:\", error);\n        }\n    };\n    // Setup connection\n    const setupConnection = async ()=>{\n        if (!userId || !currentUserId) return;\n        try {\n            console.log(\"\\uD83D\\uDD0C Setting up STOMP connection for user: \".concat(userId));\n            setConnectionStatus(\"connecting\");\n            // Get singleton client instance với callback để subscribe khi connected\n            const client = await (0,_utils_socket__WEBPACK_IMPORTED_MODULE_2__.getStompClient)(()=>{\n                console.log(\"✅ Connected to STOMP for user: \".concat(userId));\n                setConnectionStatus(\"connected\");\n                // Subscribe ngay khi connected (giống như bản cũ)\n                subscribeToMessages(clientRef.current);\n            });\n            clientRef.current = client;\n            // Nếu client đã connected rồi, subscribe luôn\n            if (client && client.connected) {\n                console.log(\"\\uD83D\\uDD0C Client already connected, subscribing immediately\");\n                subscribeToMessages(client);\n                setConnectionStatus(\"connected\");\n            }\n        } catch (error) {\n            console.error(\"❌ Failed to setup STOMP connection:\", error);\n            setConnectionStatus(\"error\");\n        }\n    };\n    // Health check function\n    const startHealthCheck = ()=>{\n        if (healthCheckRef.current) {\n            clearInterval(healthCheckRef.current);\n        }\n        healthCheckRef.current = setInterval(()=>{\n            const status = (0,_utils_socket__WEBPACK_IMPORTED_MODULE_2__.getStompClientStatus)();\n            if (!status.connected && (0,_utils_axios__WEBPACK_IMPORTED_MODULE_5__.isTokenValid)()) {\n                console.log(\"\\uD83D\\uDD04 Health check: Connection lost, attempting to reconnect...\");\n                setConnectionStatus(\"reconnecting\");\n                setupConnection();\n            } else if (status.connected && connectionStatus !== \"connected\") {\n                setConnectionStatus(\"connected\");\n                // Đảm bảo subscribe nếu chưa có\n                if (!subscriptionRef.current && clientRef.current) {\n                    console.log(\"\\uD83D\\uDD04 Health check: Re-subscribing to messages\");\n                    subscribeToMessages(clientRef.current);\n                }\n            }\n            // Log status periodically for debugging\n            console.log(\"\\uD83D\\uDC93 Health check:\", {\n                connected: status.connected,\n                subscriptions: status.subscriptions,\n                hasSubscription: !!subscriptionRef.current,\n                reconnectAttempts: status.reconnectAttempts,\n                hasValidToken: (0,_utils_axios__WEBPACK_IMPORTED_MODULE_5__.isTokenValid)()\n            });\n        }, 15000);\n    };\n    // Main effect\n    (0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)(()=>{\n        let isMounted = true;\n        const initializeConnection = async ()=>{\n            if (!userId || !currentUserId || !isMounted) return;\n            await setupConnection();\n            startHealthCheck();\n        };\n        initializeConnection();\n        return ()=>{\n            isMounted = false;\n            // Cleanup subscription\n            if (subscriptionRef.current) {\n                console.log(\"\\uD83D\\uDD0C Unsubscribing from /message/\".concat(userId));\n                subscriptionRef.current.unsubscribe();\n                subscriptionRef.current = null;\n            }\n            // Clear health check\n            if (healthCheckRef.current) {\n                clearInterval(healthCheckRef.current);\n                healthCheckRef.current = null;\n            }\n            // Note: We don't disconnect the client here as it's shared\n            // The singleton client will handle its own lifecycle\n            clientRef.current = null;\n            setConnectionStatus(\"disconnected\");\n        };\n    }, [\n        userId,\n        currentUserId,\n        handleMessage\n    ]);\n    // Method để gửi message qua STOMP client\n    const sendMessage = (destination, message)=>{\n        var _clientRef_current;\n        if ((_clientRef_current = clientRef.current) === null || _clientRef_current === void 0 ? void 0 : _clientRef_current.connected) {\n            return clientRef.current.sendMessage(destination, message);\n        } else {\n            console.warn(\"⚠️ STOMP client is not connected\");\n            return false;\n        }\n    };\n    // Get detailed connection status\n    const getConnectionInfo = ()=>{\n        const status = (0,_utils_socket__WEBPACK_IMPORTED_MODULE_2__.getStompClientStatus)();\n        return {\n            status: connectionStatus,\n            isConnected: status.connected,\n            hasSubscription: !!subscriptionRef.current,\n            userId,\n            currentUserId,\n            subscriptions: status.subscriptions,\n            reconnectAttempts: status.reconnectAttempts\n        };\n    };\n    // Manual reconnect function\n    const reconnect = ()=>{\n        console.log(\"\\uD83D\\uDD04 Manual reconnect requested\");\n        setConnectionStatus(\"reconnecting\");\n        setupConnection();\n    };\n    return {\n        sendMessage,\n        getConnectionInfo,\n        connectionStatus,\n        reconnect\n    };\n}\n_s(useMessageNotification, \"uq6Usxfb7uesR/awP0lI3tctuc8=\", false, function() {\n    return [\n        next_navigation__WEBPACK_IMPORTED_MODULE_6__.useRouter,\n        _store_ZustandStore__WEBPACK_IMPORTED_MODULE_4__[\"default\"]\n    ];\n});\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL3NyYy9ob29rcy91c2VNZXNzYWdlTm90aWZpY2F0aW9uLmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7O0FBRWlFO0FBQ0s7QUFDOUI7QUFDTztBQUNGO0FBQ0Q7QUFFN0IsU0FBU1UsdUJBQXVCQyxNQUFNOztJQUNuRCxNQUFNQyxrQkFBa0JYLDZDQUFNQSxDQUFDO0lBQy9CLE1BQU1ZLFlBQVlaLDZDQUFNQSxDQUFDO0lBQ3pCLE1BQU1hLGlCQUFpQmIsNkNBQU1BLENBQUM7SUFDOUIsTUFBTSxDQUFDYyxlQUFlQyxpQkFBaUIsR0FBR2QsK0NBQVFBLENBQUM7SUFDbkQsTUFBTSxDQUFDZSxrQkFBa0JDLG9CQUFvQixHQUFHaEIsK0NBQVFBLENBQUM7SUFDekQsTUFBTWlCLFNBQVNWLDBEQUFTQTtJQUV4QixnQkFBZ0I7SUFDaEIsTUFBTSxFQUFFVyxhQUFhLEVBQUVDLGlCQUFpQixFQUFFQyxhQUFhLEVBQUVDLFVBQVUsRUFBRSxHQUFHaEIsK0RBQVdBO0lBRW5GUCxnREFBU0EsQ0FBQztRQUNSLE1BQU13QixNQUFNQyxhQUFhQyxPQUFPLENBQUM7UUFDakMsSUFBSUYsS0FBS1IsaUJBQWlCUTtJQUM1QixHQUFHLEVBQUU7SUFFTCxrQ0FBa0M7SUFDbEMsTUFBTUcsaUJBQWlCLENBQUNDLFlBQVlDO1FBQ2xDQyxRQUFRQyxHQUFHLENBQUMsaURBQXVDSDtRQUNuRCxNQUFNLEVBQUVJLFFBQVEsRUFBRSxHQUFHekIsMkRBQVdBLENBQUMwQixRQUFRO1FBQ3pDSCxRQUFRQyxHQUFHLENBQUMsa0NBQXdCQztRQUVwQyxNQUFNRSxZQUFZRixTQUFTRyxJQUFJLENBQUMsQ0FBQ0MsSUFBTUEsRUFBRVAsTUFBTSxLQUFLQTtRQUNwRCxJQUFJSyxXQUFXO1lBQ2IsTUFBTUcsY0FBYztnQkFDbEIsR0FBR0gsU0FBUztnQkFDWkksZUFBZTtvQkFDYkMsSUFBSVgsV0FBV1csRUFBRTtvQkFDakJDLFNBQVNaLFdBQVdZLE9BQU87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Q2hDLE9BQU92RSxVQUFVd0UsT0FBTyxDQUFDa0IsV0FBVyxDQUFDQyxhQUFhaEI7UUFDcEQsT0FBTztZQUNMMUQsUUFBUStCLElBQUksQ0FBQztZQUNiLE9BQU87UUFDVDtJQUNGO0lBRUEsaUNBQWlDO0lBQ2pDLE1BQU00QyxvQkFBb0I7UUFDeEIsTUFBTVQsU0FBUzNGLG1FQUFvQkE7UUFDbkMsT0FBTztZQUNMMkYsUUFBUS9FO1lBQ1J5RixhQUFhVixPQUFPWixTQUFTO1lBQzdCYyxpQkFBaUIsQ0FBQyxDQUFDdEYsZ0JBQWdCeUUsT0FBTztZQUMxQzFFO1lBQ0FJO1lBQ0FrRixlQUFlRCxPQUFPQyxhQUFhO1lBQ25DRSxtQkFBbUJILE9BQU9HLGlCQUFpQjtRQUM3QztJQUNGO0lBRUEsNEJBQTRCO0lBQzVCLE1BQU1RLFlBQVk7UUFDaEI3RSxRQUFRQyxHQUFHLENBQUM7UUFDWmIsb0JBQW9CO1FBQ3BCMEU7SUFDRjtJQUVBLE9BQU87UUFDTFc7UUFDQUU7UUFDQXhGO1FBQ0EwRjtJQUNGO0FBQ0Y7R0FuVHdCakc7O1FBTVBELHNEQUFTQTtRQUdnREYsMkRBQVdBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL3NyYy9ob29rcy91c2VNZXNzYWdlTm90aWZpY2F0aW9uLmpzPzMzNmYiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2UgY2xpZW50XCI7XHJcblxyXG5pbXBvcnQgeyB1c2VFZmZlY3QsIHVzZVJlZiwgdXNlU3RhdGUsIHVzZUNhbGxiYWNrIH0gZnJvbSBcInJlYWN0XCI7XHJcbmltcG9ydCB7IGdldFN0b21wQ2xpZW50LCBnZXRTdG9tcENsaWVudFN0YXR1cyB9IGZyb20gXCJAL3V0aWxzL3NvY2tldFwiO1xyXG5pbXBvcnQgeyB0b2FzdCB9IGZyb20gXCJyZWFjdC1ob3QtdG9hc3RcIjtcclxuaW1wb3J0IHVzZUFwcFN0b3JlIGZyb20gXCJAL3N0b3JlL1p1c3RhbmRTdG9yZVwiO1xyXG5pbXBvcnQgeyBpc1Rva2VuVmFsaWQgfSBmcm9tIFwiQC91dGlscy9heGlvc1wiO1xyXG5pbXBvcnQgeyB1c2VSb3V0ZXIgfSBmcm9tIFwibmV4dC9uYXZpZ2F0aW9uXCI7XHJcblxyXG5leHBvcnQgZGVmYXVsdCBmdW5jdGlvbiB1c2VNZXNzYWdlTm90aWZpY2F0aW9uKHVzZXJJZCkge1xyXG4gIGNvbnN0IHN1YnNjcmlwdGlvblJlZiA9IHVzZVJlZihudWxsKTtcclxuICBjb25zdCBjbGllbnRSZWYgPSB1c2VSZWYobnVsbCk7XHJcbiAgY29uc3QgaGVhbHRoQ2hlY2tSZWYgPSB1c2VSZWYobnVsbCk7XHJcbiAgY29uc3QgW2N1cnJlbnRVc2VySWQsIHNldEN1cnJlbnRVc2VySWRdID0gdXNlU3RhdGUobnVsbCk7XHJcbiAgY29uc3QgW2Nvbm5lY3Rpb25TdGF0dXMsIHNldENvbm5lY3Rpb25TdGF0dXNdID0gdXNlU3RhdGUoJ2Rpc2Nvbm5lY3RlZCcpO1xyXG4gIGNvbnN0IHJvdXRlciA9IHVzZVJvdXRlcigpO1xyXG5cclxuICAvLyBTdG9yZSBhY3Rpb25zXHJcbiAgY29uc3QgeyBmZXRjaENoYXRMaXN0LCBvbk1lc3NhZ2VSZWNlaXZlZCwgb25DaGF0Q3JlYXRlZCwgc2VsZWN0Q2hhdCB9ID0gdXNlQXBwU3RvcmUoKTtcclxuXHJcbiAgdXNlRWZmZWN0KCgpID0+IHtcclxuICAgIGNvbnN0IHVpZCA9IGxvY2FsU3RvcmFnZS5nZXRJdGVtKFwidXNlcklkXCIpO1xyXG4gICAgaWYgKHVpZCkgc2V0Q3VycmVudFVzZXJJZCh1aWQpO1xyXG4gIH0sIFtdKTtcclxuXHJcbiAgLy8gSMOgbSBoZWxwZXIgxJHhu4MgY+G6rXAgbmjhuq10IGNoYXRMaXN0XHJcbiAgY29uc3QgdXBkYXRlQ2hhdExpc3QgPSAobmV3TWVzc2FnZSwgY2hhdElkKSA9PiB7XHJcbiAgICBjb25zb2xlLmxvZyhcIvCflIQgUHJvY2Vzc2luZyBtZXNzYWdlIGZvciBjaGF0TGlzdDpcIiwgbmV3TWVzc2FnZSk7XHJcbiAgICBjb25zdCB7IGNoYXRMaXN0IH0gPSB1c2VBcHBTdG9yZS5nZXRTdGF0ZSgpO1xyXG4gICAgY29uc29sZS5sb2coXCLwn5OcIEN1cnJlbnQgY2hhdExpc3Q6XCIsIGNoYXRMaXN0KTtcclxuXHJcbiAgICBjb25zdCBmb3VuZENoYXQgPSBjaGF0TGlzdC5maW5kKChjKSA9PiBjLmNoYXRJZCA9PT0gY2hhdElkKTtcclxuICAgIGlmIChmb3VuZENoYXQpIHtcclxuICAgICAgY29uc3QgdXBkYXRlZENoYXQgPSB7XHJcbiAgICAgICAgLi4uZm91bmRDaGF0LFxyXG4gICAgICAgIGxhdGVzdE1lc3NhZ2U6IHtcclxuICAgICAgICAgIGlkOiBuZXdNZXNzYWdlLmlkLFxyXG4gICAgICAgICAgY29udGVudDogbmV3TWVzc2FnZS5jb250ZW50LFxyXG4gICAgICAgICAgc2VudEF0OiBuZXdNZXNzYWdlLnNlbnRBdCxcclxuICAgICAgICAgIHNlbmRlcjogbmV3TWVzc2FnZS5zZW5kZXIsXHJcbiAgICAgICAgICBtZXNzYWdlVHlwZTogbmV3TWVzc2FnZS5tZXNzYWdlVHlwZSxcclxuICAgICAgICAgIGF0dGFjaG1lbnQ6IG5ld01lc3NhZ2UuYXR0YWNobWVudCxcclxuICAgICAgICAgIGF0dGFjaG1lbnRzOiBuZXdNZXNzYWdlLmF0dGFjaG1lbnRzLFxyXG4gICAgICAgICAgZGVsZXRlZDogbmV3TWVzc2FnZS5kZWxldGVkIHx8IGZhbHNlLFxyXG4gICAgICAgIH0sXHJcbiAgICAgICAgdXBkYXRlZEF0OiBuZXdNZXNzYWdlLnNlbnRBdCxcclxuICAgICAgICBub3RSZWFkTWVzc2FnZUNvdW50OlxyXG4gICAgICAgICAgKGZvdW5kQ2hhdC5ub3RSZWFkTWVzc2FnZUNvdW50IHx8IDApICsgKG5ld01lc3NhZ2UuaXNPd25NZXNzYWdlID8gMCA6IDEpLFxyXG4gICAgICB9O1xyXG4gICAgICBjb25zdCBvdGhlckNoYXRzID0gY2hhdExpc3QuZmlsdGVyKChjKSA9PiBjLmNoYXRJZCAhPT0gY2hhdElkKTtcclxuICAgICAgY29uc3QgbmV3Q2hhdExpc3QgPSBbLi4ub3RoZXJDaGF0cywgdXBkYXRlZENoYXRdLnNvcnQoXHJcbiAgICAgICAgKGEsIGIpID0+IG5ldyBEYXRlKGIudXBkYXRlZEF0KS5nZXRUaW1lKCkgLSBuZXcgRGF0ZShhLnVwZGF0ZWRBdCkuZ2V0VGltZSgpXHJcbiAgICAgICk7XHJcblxyXG4gICAgICB1c2VBcHBTdG9yZS5zZXRTdGF0ZSh7IGNoYXRMaXN0OiBuZXdDaGF0TGlzdC5tYXAoKGNoYXQpID0+ICh7IC4uLmNoYXQgfSkpIH0pO1xyXG5cclxuICAgICAgY29uc29sZS5sb2coXCLinIUgQ2hhdExpc3QgdXBkYXRlZCBzdWNjZXNzZnVsbHkhXCIpO1xyXG4gICAgfSBlbHNlIHtcclxuICAgICAgY29uc29sZS53YXJuKGDimqDvuI8gS2jDtG5nIHTDrG0gdGjhuqV5IGNoYXQgduG7m2kgY2hhdElkOiAke2NoYXRJZH1gKTtcclxuICAgIH1cclxuICB9O1xyXG5cclxuICAvLyBNZXNzYWdlIGhhbmRsZXJcclxuICBjb25zdCBoYW5kbGVNZXNzYWdlID0gdXNlQ2FsbGJhY2soYXN5bmMgKG1lc3NhZ2VEYXRhKSA9PiB7XHJcbiAgICBpZiAoIW1lc3NhZ2VEYXRhKSByZXR1cm47XHJcblxyXG4gICAgY29uc29sZS5sb2coXCLwn5OoIE5ldyBtZXNzYWdlIHJlY2VpdmVkOlwiLCBtZXNzYWdlRGF0YSk7XHJcblxyXG4gICAgdHJ5IHtcclxuICAgICAgLy8gQ29tbWFuZCB44butIGzDvSByacOqbmdcclxuICAgICAgaWYgKG1lc3NhZ2VEYXRhLmNvbW1hbmQgPT09IFwiREVMRVRFXCIpIHtcclxuICAgICAgICB0b2FzdChg8J+Xke+4jyBUaW4gbmjhuq9uIMSRw6MgYuG7iyB4w7NhYCwge1xyXG4gICAgICAgICAgZHVyYXRpb246IDMwMDAsXHJcbiAgICAgICAgICBwb3NpdGlvbjogXCJ0b3AtcmlnaHRcIixcclxuICAgICAgICB9KTtcclxuICAgICAgICByZXR1cm47XHJcbiAgICAgIH1cclxuXHJcbiAgICAgIGlmIChtZXNzYWdlRGF0YS5jb21tYW5kID09PSBcIkVESVRcIikge1xyXG4gICAgICAgIGNvbnN0IHNlbmRlck5hbWUgPSBtZXNzYWdlRGF0YS5zZW5kZXI/LnVzZXJuYW1lIHx8IG1lc3NhZ2VEYXRhLnNlbmRlcj8uZ2l2ZW5OYW1lIHx8IFwiYWkgxJHDs1wiO1xyXG4gICAgICAgIGlmIChtZXNzYWdlRGF0YS5zZW5kZXI/LmlkICE9PSBjdXJyZW50VXNlcklkKSB7XHJcbiAgICAgICAgICB0b2FzdChg4pyP77iPICR7c2VuZGVyTmFtZX0gxJHDoyBjaOG7iW5oIHPhu61hIHRpbiBuaOG6r25gLCB7XHJcbiAgICAgICAgICAgIGR1cmF0aW9uOiAzMDAwLFxyXG4gICAgICAgICAgICBwb3NpdGlvbjogXCJ0b3AtcmlnaHRcIixcclxuICAgICAgICAgIH0pO1xyXG4gICAgICAgIH1cclxuICAgICAgICByZXR1cm47XHJcbiAgICAgIH1cclxuXHJcbiAgICAgIGNvbnN0IG5ld01lc3NhZ2UgPSB7XHJcbiAgICAgICAgLi4ubWVzc2FnZURhdGEsXHJcbiAgICAgICAgaXNPd25NZXNzYWdlOiBtZXNzYWdlRGF0YS5zZW5kZXI/LmlkID09PSBjdXJyZW50VXNlcklkLFxyXG4gICAgICB9O1xyXG5cclxuICAgICAgLy8gQ+G6rXAgbmjhuq10IGNoYXQgbGlzdFxyXG4gICAgICBpZiAobWVzc2FnZURhdGEuY2hhdElkKSB7XHJcbiAgICAgICAgcmVxdWVzdEFuaW1hdGlvbkZyYW1lKCgpID0+IHtcclxuICAgICAgICAgIHVwZGF0ZUNoYXRMaXN0KG5ld01lc3NhZ2UsIG1lc3NhZ2VEYXRhLmNoYXRJZCk7XHJcbiAgICAgICAgfSk7XHJcbiAgICAgIH1cclxuXHJcbiAgICAgIC8vIFRvYXN0IHRow7RuZyBiw6FvIGvDqG0gY2xpY2sgaGFuZGxlclxyXG4gICAgICBpZiAoXHJcbiAgICAgICAgbWVzc2FnZURhdGEuc2VuZGVyICYmXHJcbiAgICAgICAgbWVzc2FnZURhdGEuY29udGVudCAmJlxyXG4gICAgICAgICFuZXdNZXNzYWdlLmlzT3duTWVzc2FnZVxyXG4gICAgICApIHtcclxuICAgICAgICBjb25zdCBzZW5kZXJOYW1lID0gbWVzc2FnZURhdGEuc2VuZGVyLnVzZXJuYW1lIHx8IG1lc3NhZ2VEYXRhLnNlbmRlci5naXZlbk5hbWUgfHwgXCJhaSDEkcOzXCI7XHJcblxyXG4gICAgICAgIHRvYXN0KFxyXG4gICAgICAgICAgKHQpID0+IChcclxuICAgICAgICAgICAgPGRpdlxyXG4gICAgICAgICAgICAgIG9uQ2xpY2s9eygpID0+IHtcclxuICAgICAgICAgICAgICAgIHNlbGVjdENoYXQobWVzc2FnZURhdGEuY2hhdElkKTtcclxuICAgICAgICAgICAgICAgIHJvdXRlci5wdXNoKFwiL2NoYXRzXCIpO1xyXG4gICAgICAgICAgICAgICAgdG9hc3QuZGlzbWlzcyh0LmlkKTtcclxuICAgICAgICAgICAgICB9fVxyXG4gICAgICAgICAgICAgIGNsYXNzTmFtZT1cImN1cnNvci1wb2ludGVyXCJcclxuICAgICAgICAgICAgPlxyXG4gICAgICAgICAgICAgIPCfkqwge3NlbmRlck5hbWV9OiB7bWVzc2FnZURhdGEuY29udGVudH1cclxuICAgICAgICAgICAgPC9kaXY+XHJcbiAgICAgICAgICApLFxyXG4gICAgICAgICAge1xyXG4gICAgICAgICAgICBkdXJhdGlvbjogNDAwMCxcclxuICAgICAgICAgICAgcG9zaXRpb246IFwidG9wLXJpZ2h0XCIsXHJcbiAgICAgICAgICB9XHJcbiAgICAgICAgKTtcclxuICAgICAgfVxyXG5cclxuICAgICAgaWYgKG9uTWVzc2FnZVJlY2VpdmVkKSB7XHJcbiAgICAgICAgb25NZXNzYWdlUmVjZWl2ZWQobWVzc2FnZURhdGEpO1xyXG4gICAgICB9XHJcblxyXG4gICAgICB3aW5kb3cuZGlzcGF0Y2hFdmVudChcclxuICAgICAgICBuZXcgQ3VzdG9tRXZlbnQoXCJuZXdNZXNzYWdlUmVjZWl2ZWRcIiwge1xyXG4gICAgICAgICAgZGV0YWlsOiBtZXNzYWdlRGF0YSxcclxuICAgICAgICB9KVxyXG4gICAgICApO1xyXG4gICAgfSBjYXRjaCAoZXJyb3IpIHtcclxuICAgICAgY29uc29sZS5lcnJvcihcIuKdjCBGYWlsZWQgdG8gcHJvY2VzcyBtZXNzYWdlOlwiLCBlcnJvcik7XHJcbiAgICB9XHJcbiAgfSwgW2N1cnJlbnRVc2VySWQsIHNlbGVjdENoYXQsIHJvdXRlciwgb25NZXNzYWdlUmVjZWl2ZWRdKTtcclxuXHJcbiAgLy8gU3Vic2NyaWJlIHRvIG1lc3NhZ2VzIC0gY2jhu4kgZ+G7jWkga2hpIGNsaWVudCDEkcOjIGNvbm5lY3RlZFxyXG4gIGNvbnN0IHN1YnNjcmliZVRvTWVzc2FnZXMgPSAoY2xpZW50KSA9PiB7XHJcbiAgICBpZiAoIWNsaWVudCB8fCAhY2xpZW50LmNvbm5lY3RlZCB8fCAhdXNlcklkKSB7XHJcbiAgICAgIGNvbnNvbGUud2FybihcIuKaoO+4jyBDYW5ub3Qgc3Vic2NyaWJlOiBjbGllbnQgbm90IHJlYWR5IG9yIHVzZXJJZCBtaXNzaW5nXCIpO1xyXG4gICAgICByZXR1cm47XHJcbiAgICB9XHJcblxyXG4gICAgdHJ5IHtcclxuICAgICAgY29uc29sZS5sb2coYPCfk6EgU3Vic2NyaWJpbmcgdG8gL21lc3NhZ2UvJHt1c2VySWR9YCk7XHJcbiAgICAgIFxyXG4gICAgICAvLyBVbnN1YnNjcmliZSBwcmV2aW91cyBzdWJzY3JpcHRpb24gaWYgZXhpc3RzXHJcbiAgICAgIGlmIChzdWJzY3JpcHRpb25SZWYuY3VycmVudCkge1xyXG4gICAgICAgIHN1YnNjcmlwdGlvblJlZi5jdXJyZW50LnVuc3Vic2NyaWJlKCk7XHJcbiAgICAgICAgc3Vic2NyaXB0aW9uUmVmLmN1cnJlbnQgPSBudWxsO1xyXG4gICAgICB9XHJcbiAgICAgIFxyXG4gICAgICBzdWJzY3JpcHRpb25SZWYuY3VycmVudCA9IGNsaWVudC5zdWJzY3JpYmVUb0NoYW5uZWwoXHJcbiAgICAgICAgYC9tZXNzYWdlLyR7dXNlcklkfWAsIFxyXG4gICAgICAgIChtZXNzYWdlKSA9PiB7XHJcbiAgICAgICAgICB0cnkge1xyXG4gICAgICAgICAgICBjb25zdCBtZXNzYWdlRGF0YSA9IEpTT04ucGFyc2UobWVzc2FnZS5ib2R5KTtcclxuICAgICAgICAgICAgaGFuZGxlTWVzc2FnZShtZXNzYWdlRGF0YSk7XHJcbiAgICAgICAgICB9IGNhdGNoIChlcnJvcikge1xyXG4gICAgICAgICAgICBjb25zb2xlLmVycm9yKFwi4p2MIFBhcnNlIG1lc3NhZ2UgZXJyb3I6XCIsIGVycm9yKTtcclxuICAgICAgICAgIH1cclxuICAgICAgICB9XHJcbiAgICAgICk7XHJcblxyXG4gICAgICBjb25zb2xlLmxvZyhg4pyFIFN1Y2Nlc3NmdWxseSBzdWJzY3JpYmVkIHRvIC9tZXNzYWdlLyR7dXNlcklkfWApO1xyXG4gICAgfSBjYXRjaCAoZXJyb3IpIHtcclxuICAgICAgY29uc29sZS5lcnJvcihcIuKdjCBGYWlsZWQgdG8gc3Vic2NyaWJlIHRvIG1lc3NhZ2VzOlwiLCBlcnJvcik7XHJcbiAgICB9XHJcbiAgfTtcclxuXHJcbiAgLy8gU2V0dXAgY29ubmVjdGlvblxyXG4gIGNvbnN0IHNldHVwQ29ubmVjdGlvbiA9IGFzeW5jICgpID0+IHtcclxuICAgIGlmICghdXNlcklkIHx8ICFjdXJyZW50VXNlcklkKSByZXR1cm47XHJcblxyXG4gICAgdHJ5IHtcclxuICAgICAgY29uc29sZS5sb2coYPCflIwgU2V0dGluZyB1cCBTVE9NUCBjb25uZWN0aW9uIGZvciB1c2VyOiAke3VzZXJJZH1gKTtcclxuICAgICAgc2V0Q29ubmVjdGlvblN0YXR1cygnY29ubmVjdGluZycpO1xyXG4gICAgICBcclxuICAgICAgLy8gR2V0IHNpbmdsZXRvbiBjbGllbnQgaW5zdGFuY2UgduG7m2kgY2FsbGJhY2sgxJHhu4Mgc3Vic2NyaWJlIGtoaSBjb25uZWN0ZWRcclxuICAgICAgY29uc3QgY2xpZW50ID0gYXdhaXQgZ2V0U3RvbXBDbGllbnQoKCkgPT4ge1xyXG4gICAgICAgIGNvbnNvbGUubG9nKGDinIUgQ29ubmVjdGVkIHRvIFNUT01QIGZvciB1c2VyOiAke3VzZXJJZH1gKTtcclxuICAgICAgICBzZXRDb25uZWN0aW9uU3RhdHVzKCdjb25uZWN0ZWQnKTtcclxuICAgICAgICBcclxuICAgICAgICAvLyBTdWJzY3JpYmUgbmdheSBraGkgY29ubmVjdGVkIChnaeG7kW5nIG5oxrAgYuG6o24gY8WpKVxyXG4gICAgICAgIHN1YnNjcmliZVRvTWVzc2FnZXMoY2xpZW50UmVmLmN1cnJlbnQpO1xyXG4gICAgICB9KTtcclxuICAgICAgXHJcbiAgICAgIGNsaWVudFJlZi5jdXJyZW50ID0gY2xpZW50O1xyXG5cclxuICAgICAgLy8gTuG6v3UgY2xpZW50IMSRw6MgY29ubmVjdGVkIHLhu5NpLCBzdWJzY3JpYmUgbHXDtG5cclxuICAgICAgaWYgKGNsaWVudCAmJiBjbGllbnQuY29ubmVjdGVkKSB7XHJcbiAgICAgICAgY29uc29sZS5sb2coXCLwn5SMIENsaWVudCBhbHJlYWR5IGNvbm5lY3RlZCwgc3Vic2NyaWJpbmcgaW1tZWRpYXRlbHlcIik7XHJcbiAgICAgICAgc3Vic2NyaWJlVG9NZXNzYWdlcyhjbGllbnQpO1xyXG4gICAgICAgIHNldENvbm5lY3Rpb25TdGF0dXMoJ2Nvbm5lY3RlZCcpO1xyXG4gICAgICB9XHJcbiAgICAgIFxyXG4gICAgfSBjYXRjaCAoZXJyb3IpIHtcclxuICAgICAgY29uc29sZS5lcnJvcihcIuKdjCBGYWlsZWQgdG8gc2V0dXAgU1RPTVAgY29ubmVjdGlvbjpcIiwgZXJyb3IpO1xyXG4gICAgICBzZXRDb25uZWN0aW9uU3RhdHVzKCdlcnJvcicpO1xyXG4gICAgfVxyXG4gIH07XHJcblxyXG4gIC8vIEhlYWx0aCBjaGVjayBmdW5jdGlvblxyXG4gIGNvbnN0IHN0YXJ0SGVhbHRoQ2hlY2sgPSAoKSA9PiB7XHJcbiAgICBpZiAoaGVhbHRoQ2hlY2tSZWYuY3VycmVudCkge1xyXG4gICAgICBjbGVhckludGVydmFsKGhlYWx0aENoZWNrUmVmLmN1cnJlbnQpO1xyXG4gICAgfVxyXG5cclxuICAgIGhlYWx0aENoZWNrUmVmLmN1cnJlbnQgPSBzZXRJbnRlcnZhbCgoKSA9PiB7XHJcbiAgICAgIGNvbnN0IHN0YXR1cyA9IGdldFN0b21wQ2xpZW50U3RhdHVzKCk7XHJcbiAgICAgIFxyXG4gICAgICBpZiAoIXN0YXR1cy5jb25uZWN0ZWQgJiYgaXNUb2tlblZhbGlkKCkpIHtcclxuICAgICAgICBjb25zb2xlLmxvZyhcIvCflIQgSGVhbHRoIGNoZWNrOiBDb25uZWN0aW9uIGxvc3QsIGF0dGVtcHRpbmcgdG8gcmVjb25uZWN0Li4uXCIpO1xyXG4gICAgICAgIHNldENvbm5lY3Rpb25TdGF0dXMoJ3JlY29ubmVjdGluZycpO1xyXG4gICAgICAgIHNldHVwQ29ubmVjdGlvbigpO1xyXG4gICAgICB9IGVsc2UgaWYgKHN0YXR1cy5jb25uZWN0ZWQgJiYgY29ubmVjdGlvblN0YXR1cyAhPT0gJ2Nvbm5lY3RlZCcpIHtcclxuICAgICAgICBzZXRDb25uZWN0aW9uU3RhdHVzKCdjb25uZWN0ZWQnKTtcclxuICAgICAgICBcclxuICAgICAgICAvLyDEkOG6o20gYuG6o28gc3Vic2NyaWJlIG7hur91IGNoxrBhIGPDs1xyXG4gICAgICAgIGlmICghc3Vic2NyaXB0aW9uUmVmLmN1cnJlbnQgJiYgY2xpZW50UmVmLmN1cnJlbnQpIHtcclxuICAgICAgICAgIGNvbnNvbGUubG9nKFwi8J+UhCBIZWFsdGggY2hlY2s6IFJlLXN1YnNjcmliaW5nIHRvIG1lc3NhZ2VzXCIpO1xyXG4gICAgICAgICAgc3Vic2NyaWJlVG9NZXNzYWdlcyhjbGllbnRSZWYuY3VycmVudCk7XHJcbiAgICAgICAgfVxyXG4gICAgICB9XHJcbiAgICAgIFxyXG4gICAgICAvLyBMb2cgc3RhdHVzIHBlcmlvZGljYWxseSBmb3IgZGVidWdnaW5nXHJcbiAgICAgIGNvbnNvbGUubG9nKFwi8J+SkyBIZWFsdGggY2hlY2s6XCIsIHtcclxuICAgICAgICBjb25uZWN0ZWQ6IHN0YXR1cy5jb25uZWN0ZWQsXHJcbiAgICAgICAgc3Vic2NyaXB0aW9uczogc3RhdHVzLnN1YnNjcmlwdGlvbnMsXHJcbiAgICAgICAgaGFzU3Vic2NyaXB0aW9uOiAhIXN1YnNjcmlwdGlvblJlZi5jdXJyZW50LFxyXG4gICAgICAgIHJlY29ubmVjdEF0dGVtcHRzOiBzdGF0dXMucmVjb25uZWN0QXR0ZW1wdHMsXHJcbiAgICAgICAgaGFzVmFsaWRUb2tlbjogaXNUb2tlblZhbGlkKClcclxuICAgICAgfSk7XHJcbiAgICB9LCAxNTAwMCk7XHJcbiAgfTtcclxuXHJcbiAgLy8gTWFpbiBlZmZlY3RcclxuICB1c2VFZmZlY3QoKCkgPT4ge1xyXG4gICAgbGV0IGlzTW91bnRlZCA9IHRydWU7XHJcblxyXG4gICAgY29uc3QgaW5pdGlhbGl6ZUNvbm5lY3Rpb24gPSBhc3luYyAoKSA9PiB7XHJcbiAgICAgIGlmICghdXNlcklkIHx8ICFjdXJyZW50VXNlcklkIHx8ICFpc01vdW50ZWQpIHJldHVybjtcclxuICAgICAgXHJcbiAgICAgIGF3YWl0IHNldHVwQ29ubmVjdGlvbigpO1xyXG4gICAgICBzdGFydEhlYWx0aENoZWNrKCk7XHJcbiAgICB9O1xyXG5cclxuICAgIGluaXRpYWxpemVDb25uZWN0aW9uKCk7XHJcblxyXG4gICAgcmV0dXJuICgpID0+IHtcclxuICAgICAgaXNNb3VudGVkID0gZmFsc2U7XHJcbiAgICAgIFxyXG4gICAgICAvLyBDbGVhbnVwIHN1YnNjcmlwdGlvblxyXG4gICAgICBpZiAoc3Vic2NyaXB0aW9uUmVmLmN1cnJlbnQpIHtcclxuICAgICAgICBjb25zb2xlLmxvZyhg8J+UjCBVbnN1YnNjcmliaW5nIGZyb20gL21lc3NhZ2UvJHt1c2VySWR9YCk7XHJcbiAgICAgICAgc3Vic2NyaXB0aW9uUmVmLmN1cnJlbnQudW5zdWJzY3JpYmUoKTtcclxuICAgICAgICBzdWJzY3JpcHRpb25SZWYuY3VycmVudCA9IG51bGw7XHJcbiAgICAgIH1cclxuXHJcbiAgICAgIC8vIENsZWFyIGhlYWx0aCBjaGVja1xyXG4gICAgICBpZiAoaGVhbHRoQ2hlY2tSZWYuY3VycmVudCkge1xyXG4gICAgICAgIGNsZWFySW50ZXJ2YWwoaGVhbHRoQ2hlY2tSZWYuY3VycmVudCk7XHJcbiAgICAgICAgaGVhbHRoQ2hlY2tSZWYuY3VycmVudCA9IG51bGw7XHJcbiAgICAgIH1cclxuXHJcbiAgICAgIC8vIE5vdGU6IFdlIGRvbid0IGRpc2Nvbm5lY3QgdGhlIGNsaWVudCBoZXJlIGFzIGl0J3Mgc2hhcmVkXHJcbiAgICAgIC8vIFRoZSBzaW5nbGV0b24gY2xpZW50IHdpbGwgaGFuZGxlIGl0cyBvd24gbGlmZWN5Y2xlXHJcbiAgICAgIGNsaWVudFJlZi5jdXJyZW50ID0gbnVsbDtcclxuICAgICAgc2V0Q29ubmVjdGlvblN0YXR1cygnZGlzY29ubmVjdGVkJyk7XHJcbiAgICB9O1xyXG4gIH0sIFt1c2VySWQsIGN1cnJlbnRVc2VySWQsIGhhbmRsZU1lc3NhZ2VdKTtcclxuXHJcbiAgLy8gTWV0aG9kIMSR4buDIGfhu61pIG1lc3NhZ2UgcXVhIFNUT01QIGNsaWVudFxyXG4gIGNvbnN0IHNlbmRNZXNzYWdlID0gKGRlc3RpbmF0aW9uLCBtZXNzYWdlKSA9PiB7XHJcbiAgICBpZiAoY2xpZW50UmVmLmN1cnJlbnQ/LmNvbm5lY3RlZCkge1xyXG4gICAgICByZXR1cm4gY2xpZW50UmVmLmN1cnJlbnQuc2VuZE1lc3NhZ2UoZGVzdGluYXRpb24sIG1lc3NhZ2UpO1xyXG4gICAgfSBlbHNlIHtcclxuICAgICAgY29uc29sZS53YXJuKFwi4pqg77iPIFNUT01QIGNsaWVudCBpcyBub3QgY29ubmVjdGVkXCIpO1xyXG4gICAgICByZXR1cm4gZmFsc2U7XHJcbiAgICB9XHJcbiAgfTtcclxuXHJcbiAgLy8gR2V0IGRldGFpbGVkIGNvbm5lY3Rpb24gc3RhdHVzXHJcbiAgY29uc3QgZ2V0Q29ubmVjdGlvbkluZm8gPSAoKSA9PiB7XHJcbiAgICBjb25zdCBzdGF0dXMgPSBnZXRTdG9tcENsaWVudFN0YXR1cygpO1xyXG4gICAgcmV0dXJuIHtcclxuICAgICAgc3RhdHVzOiBjb25uZWN0aW9uU3RhdHVzLFxyXG4gICAgICBpc0Nvbm5lY3RlZDogc3RhdHVzLmNvbm5lY3RlZCxcclxuICAgICAgaGFzU3Vic2NyaXB0aW9uOiAhIXN1YnNjcmlwdGlvblJlZi5jdXJyZW50LFxyXG4gICAgICB1c2VySWQsXHJcbiAgICAgIGN1cnJlbnRVc2VySWQsXHJcbiAgICAgIHN1YnNjcmlwdGlvbnM6IHN0YXR1cy5zdWJzY3JpcHRpb25zLFxyXG4gICAgICByZWNvbm5lY3RBdHRlbXB0czogc3RhdHVzLnJlY29ubmVjdEF0dGVtcHRzLFxyXG4gICAgfTtcclxuICB9O1xyXG5cclxuICAvLyBNYW51YWwgcmVjb25uZWN0IGZ1bmN0aW9uXHJcbiAgY29uc3QgcmVjb25uZWN0ID0gKCkgPT4ge1xyXG4gICAgY29uc29sZS5sb2coXCLwn5SEIE1hbnVhbCByZWNvbm5lY3QgcmVxdWVzdGVkXCIpO1xyXG4gICAgc2V0Q29ubmVjdGlvblN0YXR1cygncmVjb25uZWN0aW5nJyk7XHJcbiAgICBzZXR1cENvbm5lY3Rpb24oKTtcclxuICB9O1xyXG5cclxuICByZXR1cm4ge1xyXG4gICAgc2VuZE1lc3NhZ2UsXHJcbiAgICBnZXRDb25uZWN0aW9uSW5mbyxcclxuICAgIGNvbm5lY3Rpb25TdGF0dXMsXHJcbiAgICByZWNvbm5lY3QsXHJcbiAgfTtcclxufSJdLCJuYW1lcyI6WyJ1c2VFZmZlY3QiLCJ1c2VSZWYiLCJ1c2VTdGF0ZSIsInVzZUNhbGxiYWNrIiwiZ2V0U3RvbXBDbGllbnQiLCJnZXRTdG9tcENsaWVudFN0YXR1cyIsInRvYXN0IiwidXNlQXBwU3RvcmUiLCJpc1Rva2VuVmFsaWQiLCJ1c2VSb3V0ZXIiLCJ1c2VNZXNzYWdlTm90aWZpY2F0aW9uIiwidXNlcklkIiwic3Vic2NyaXB0aW9uUmVmIiwiY2xpZW50UmVmIiwiaGVhbHRoQ2hlY2tSZWYiLCJjdXJyZW50VXNlcklkIiwic2V0Q3VycmVudFVzZXJJZCIsImNvbm5lY3Rpb25TdGF0dXMiLCJzZXRDb25uZWN0aW9uU3RhdHVzIiwicm91dGVyIiwiZmV0Y2hDaGF0TGlzdCIsIm9uTWVzc2FnZVJlY2VpdmVkIiwib25DaGF0Q3JlYXRlZCIsInNlbGVjdENoYXQiLCJ1aWQiLCJsb2NhbFN0b3JhZ2UiLCJnZXRJdGVtIiwidXBkYXRlQ2hhdExpc3QiLCJuZXdNZXNzYWdlIiwiY2hhdElkIiwiY29uc29sZSIsImxvZyIsImNoYXRMaXN0IiwiZ2V0U3RhdGUiLCJmb3VuZENoYXQiLCJmaW5kIiwiYyIsInVwZGF0ZWRDaGF0IiwibGF0ZXN0TWVzc2FnZSIsImlkIiwiY29udGVudCIsInNlbnRBdCIsInNlbmRlciIsIm1lc3NhZ2VUeXBlIiwiYXR0YWNobWVudCIsImF0dGFjaG1lbnRzIiwiZGVsZXRlZCIsInVwZGF0ZWRBdCIsIm5vdFJlYWRNZXNzYWdlQ291bnQiLCJpc093bk1lc3NhZ2UiLCJvdGhlckNoYXRzIiwiZmlsdGVyIiwibmV3Q2hhdExpc3QiLCJzb3J0IiwiYSIsImIiLCJEYXRlIiwiZ2V0VGltZSIsInNldFN0YXRlIiwibWFwIiwiY2hhdCIsIndhcm4iLCJoYW5kbGVNZXNzYWdlIiwibWVzc2FnZURhdGEiLCJjb21tYW5kIiwiZHVyYXRpb24iLCJwb3NpdGlvbiIsInNlbmRlck5hbWUiLCJ1c2VybmFtZSIsImdpdmVuTmFtZSIsInJlcXVlc3RBbmltYXRpb25GcmFtZSIsInQiLCJkaXYiLCJvbkNsaWNrIiwicHVzaCIsImRpc21pc3MiLCJjbGFzc05hbWUiLCJ3aW5kb3ciLCJkaXNwYXRjaEV2ZW50IiwiQ3VzdG9tRXZlbnQiLCJkZXRhaWwiLCJlcnJvciIsInN1YnNjcmliZVRvTWVzc2FnZXMiLCJjbGllbnQiLCJjb25uZWN0ZWQiLCJjdXJyZW50IiwidW5zdWJzY3JpYmUiLCJzdWJzY3JpYmVUb0NoYW5uZWwiLCJtZXNzYWdlIiwiSlNPTiIsInBhcnNlIiwiYm9keSIsInNldHVwQ29ubmVjdGlvbiIsInN0YXJ0SGVhbHRoQ2hlY2siLCJjbGVhckludGVydmFsIiwic2V0SW50ZXJ2YWwiLCJzdGF0dXMiLCJzdWJzY3JpcHRpb25zIiwiaGFzU3Vic2NyaXB0aW9uIiwicmVjb25uZWN0QXR0ZW1wdHMiLCJoYXNWYWxpZFRva2VuIiwiaXNNb3VudGVkIiwiaW5pdGlhbGl6ZUNvbm5lY3Rpb24iLCJzZW5kTWVzc2FnZSIsImRlc3RpbmF0aW9uIiwiZ2V0Q29ubmVjdGlvbkluZm8iLCJpc0Nvbm5lY3RlZCIsInJlY29ubmVjdCJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(app-pages-browser)/./src/hooks/useMessageNotification.js\n"));

/***/ })

});