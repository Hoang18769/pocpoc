"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("app/(home)/layout",{

/***/ "(app-pages-browser)/./src/hooks/useMessageNotification.js":
/*!*********************************************!*\
  !*** ./src/hooks/useMessageNotification.js ***!
  \*********************************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": function() { return /* binding */ useMessageNotification; }\n/* harmony export */ });\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react/jsx-dev-runtime */ \"(app-pages-browser)/./node_modules/next/dist/compiled/react/jsx-dev-runtime.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! react */ \"(app-pages-browser)/./node_modules/next/dist/compiled/react/index.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var _utils_socket__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @/utils/socket */ \"(app-pages-browser)/./src/utils/socket.js\");\n/* harmony import */ var react_hot_toast__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! react-hot-toast */ \"(app-pages-browser)/./node_modules/react-hot-toast/dist/index.mjs\");\n/* harmony import */ var _store_ZustandStore__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @/store/ZustandStore */ \"(app-pages-browser)/./src/store/ZustandStore.js\");\n/* harmony import */ var _utils_axios__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @/utils/axios */ \"(app-pages-browser)/./src/utils/axios.js\");\n/* harmony import */ var next_navigation__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! next/navigation */ \"(app-pages-browser)/./node_modules/next/dist/api/navigation.js\");\n/* __next_internal_client_entry_do_not_use__ default auto */ \nvar _s = $RefreshSig$();\n\n\n\n\n\n\nfunction useMessageNotification(userId) {\n    _s();\n    const subscriptionRef = (0,react__WEBPACK_IMPORTED_MODULE_1__.useRef)(null);\n    const clientRef = (0,react__WEBPACK_IMPORTED_MODULE_1__.useRef)(null);\n    const healthCheckRef = (0,react__WEBPACK_IMPORTED_MODULE_1__.useRef)(null);\n    const [currentUserId, setCurrentUserId] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(null);\n    const [connectionStatus, setConnectionStatus] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(\"disconnected\");\n    const router = (0,next_navigation__WEBPACK_IMPORTED_MODULE_6__.useRouter)();\n    // Store actions\n    const { onMessageReceived, selectChat } = (0,_store_ZustandStore__WEBPACK_IMPORTED_MODULE_4__[\"default\"])();\n    (0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)(()=>{\n        const uid = localStorage.getItem(\"userId\");\n        if (uid) setCurrentUserId(uid);\n    }, []);\n    // Hàm helper để cập nhật chatList\n    const updateChatList = (0,react__WEBPACK_IMPORTED_MODULE_1__.useCallback)((newMessage, chatId)=>{\n        console.log(\"\\uD83D\\uDD04 Processing message for chatList:\", newMessage);\n        const { chatList } = _store_ZustandStore__WEBPACK_IMPORTED_MODULE_4__[\"default\"].getState();\n        console.log(\"\\uD83D\\uDCDC Current chatList:\", chatList);\n        const foundChat = chatList.find((c)=>c.chatId === chatId);\n        if (foundChat) {\n            const updatedChat = {\n                ...foundChat,\n                latestMessage: {\n                    id: newMessage.id,\n                    content: newMessage.content,\n                    sentAt: newMessage.sentAt,\n                    sender: newMessage.sender,\n                    messageType: newMessage.messageType,\n                    attachment: newMessage.attachment,\n                    attachments: newMessage.attachments,\n                    deleted: newMessage.deleted || false\n                },\n                updatedAt: newMessage.sentAt,\n                notReadMessageCount: (foundChat.notReadMessageCount || 0) + (newMessage.isOwnMessage ? 0 : 1)\n            };\n            const otherChats = chatList.filter((c)=>c.chatId !== chatId);\n            const newChatList = [\n                ...otherChats,\n                updatedChat\n            ].sort((a, b)=>new Date(b.updatedAt).getTime() - new Date(a.updatedAt).getTime());\n            _store_ZustandStore__WEBPACK_IMPORTED_MODULE_4__[\"default\"].setState({\n                chatList: newChatList.map((chat)=>({\n                        ...chat\n                    }))\n            });\n            console.log(\"✅ ChatList updated successfully!\");\n        } else {\n            console.warn(\"⚠️ Kh\\xf4ng t\\xecm thấy chat với chatId: \".concat(chatId));\n        }\n    }, []);\n    // Message handler\n    const handleMessage = (0,react__WEBPACK_IMPORTED_MODULE_1__.useCallback)(async (messageData)=>{\n        if (!messageData) return;\n        console.log(\"\\uD83D\\uDCE8 New message received:\", messageData);\n        try {\n            var _messageData_sender;\n            // Command xử lý riêng\n            if (messageData.command === \"DELETE\") {\n                (0,react_hot_toast__WEBPACK_IMPORTED_MODULE_3__.toast)(\"\\uD83D\\uDDD1️ Tin nhắn đ\\xe3 bị x\\xf3a\", {\n                    duration: 3000,\n                    position: \"top-right\"\n                });\n                return;\n            }\n            if (messageData.command === \"EDIT\") {\n                var _messageData_sender1, _messageData_sender2, _messageData_sender3;\n                const senderName = ((_messageData_sender1 = messageData.sender) === null || _messageData_sender1 === void 0 ? void 0 : _messageData_sender1.username) || ((_messageData_sender2 = messageData.sender) === null || _messageData_sender2 === void 0 ? void 0 : _messageData_sender2.givenName) || \"ai đ\\xf3\";\n                if (((_messageData_sender3 = messageData.sender) === null || _messageData_sender3 === void 0 ? void 0 : _messageData_sender3.id) !== currentUserId) {\n                    (0,react_hot_toast__WEBPACK_IMPORTED_MODULE_3__.toast)(\"✏️ \".concat(senderName, \" đ\\xe3 chỉnh sửa tin nhắn\"), {\n                        duration: 3000,\n                        position: \"top-right\"\n                    });\n                }\n                return;\n            }\n            const newMessage = {\n                ...messageData,\n                isOwnMessage: ((_messageData_sender = messageData.sender) === null || _messageData_sender === void 0 ? void 0 : _messageData_sender.id) === currentUserId\n            };\n            // Cập nhật chat list\n            if (messageData.chatId) {\n                requestAnimationFrame(()=>{\n                    updateChatList(newMessage, messageData.chatId);\n                });\n            }\n            // Toast thông báo kèm click handler\n            if (messageData.sender && messageData.content && !newMessage.isOwnMessage) {\n                const senderName = messageData.sender.username || messageData.sender.givenName || \"ai đ\\xf3\";\n                (0,react_hot_toast__WEBPACK_IMPORTED_MODULE_3__.toast)((t)=>/*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                        onClick: ()=>{\n                            selectChat(messageData.chatId);\n                            router.push(\"/chats\");\n                            react_hot_toast__WEBPACK_IMPORTED_MODULE_3__.toast.dismiss(t.id);\n                        },\n                        className: \"cursor-pointer\",\n                        children: [\n                            \"\\uD83D\\uDCAC \",\n                            senderName,\n                            \": \",\n                            messageData.content\n                        ]\n                    }, void 0, true, {\n                        fileName: \"F:\\\\LVTN2025\\\\social-media-app\\\\src\\\\hooks\\\\useMessageNotification.js\",\n                        lineNumber: 112,\n                        columnNumber: 13\n                    }, this), {\n                    duration: 4000,\n                    position: \"top-right\"\n                });\n            }\n            if (onMessageReceived) {\n                onMessageReceived(messageData);\n            }\n            window.dispatchEvent(new CustomEvent(\"newMessageReceived\", {\n                detail: messageData\n            }));\n        } catch (error) {\n            console.error(\"❌ Failed to process message:\", error);\n        }\n    }, [\n        currentUserId,\n        updateChatList,\n        selectChat,\n        router,\n        onMessageReceived\n    ]);\n    // Subscribe to messages - đơn giản hóa vì singleton đã quản lý\n    const subscribeToMessages = (0,react__WEBPACK_IMPORTED_MODULE_1__.useCallback)(async ()=>{\n        if (!userId) {\n            console.warn(\"⚠️ Cannot subscribe: userId missing\");\n            return;\n        }\n        try {\n            console.log(\"\\uD83D\\uDCE1 Setting up subscription for /message/\".concat(userId));\n            // Get client (sẽ tự động kết nối nếu chưa)\n            const client = await (0,_utils_socket__WEBPACK_IMPORTED_MODULE_2__.getStompClient)(()=>{\n                console.log(\"✅ STOMP connected for user: \".concat(userId));\n                setConnectionStatus(\"connected\");\n            });\n            clientRef.current = client;\n            // Subscribe (singleton sẽ tự động resubscribe khi reconnect)\n            if (client && client.connected) {\n                console.log(\"\\uD83D\\uDCE1 Subscribing to /message/\".concat(userId));\n                subscriptionRef.current = client.subscribeToChannel(\"/message/\".concat(userId), (message)=>{\n                    try {\n                        const messageData = JSON.parse(message.body);\n                        handleMessage(messageData);\n                    } catch (error) {\n                        console.error(\"❌ Parse message error:\", error);\n                    }\n                });\n                setConnectionStatus(\"connected\");\n                console.log(\"✅ Successfully subscribed to /message/\".concat(userId));\n            } else {\n                setConnectionStatus(\"connecting\");\n            }\n        } catch (error) {\n            console.error(\"❌ Failed to setup subscription:\", error);\n            setConnectionStatus(\"error\");\n        }\n    }, [\n        userId,\n        handleMessage\n    ]);\n    // Health check function\n    const startHealthCheck = (0,react__WEBPACK_IMPORTED_MODULE_1__.useCallback)(()=>{\n        if (healthCheckRef.current) {\n            clearInterval(healthCheckRef.current);\n        }\n        healthCheckRef.current = setInterval(()=>{\n            const status = (0,_utils_socket__WEBPACK_IMPORTED_MODULE_2__.getStompClientStatus)();\n            // Update connection status based on actual client status\n            if (status.connected && connectionStatus !== \"connected\") {\n                setConnectionStatus(\"connected\");\n            } else if (!status.connected && connectionStatus === \"connected\") {\n                setConnectionStatus(\"disconnected\");\n            }\n            // Log status for debugging\n            console.log(\"\\uD83D\\uDC93 Health check:\", {\n                connected: status.connected,\n                connecting: status.connecting,\n                subscriptions: status.subscriptions,\n                reconnectAttempts: status.reconnectAttempts,\n                hasValidToken: (0,_utils_axios__WEBPACK_IMPORTED_MODULE_5__.isTokenValid)(),\n                currentStatus: connectionStatus\n            });\n        // Singleton sẽ tự động reconnect, chúng ta chỉ cần theo dõi\n        }, 15000);\n    }, [\n        connectionStatus\n    ]);\n    // Main effect\n    (0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)(()=>{\n        let isMounted = true;\n        const initializeConnection = async ()=>{\n            if (!userId || !currentUserId || !isMounted) return;\n            console.log(\"\\uD83D\\uDE80 Initializing message notification for user: \".concat(userId));\n            await subscribeToMessages();\n            startHealthCheck();\n        };\n        initializeConnection();\n        return ()=>{\n            isMounted = false;\n            // Clear health check\n            if (healthCheckRef.current) {\n                clearInterval(healthCheckRef.current);\n                healthCheckRef.current = null;\n            }\n            // Note: Không cần unsubscribe vì singleton tự quản lý\n            // và có thể có nhiều component khác cũng đang sử dụng\n            subscriptionRef.current = null;\n            clientRef.current = null;\n            setConnectionStatus(\"disconnected\");\n            console.log(\"\\uD83D\\uDD0C Cleaned up message notification for user: \".concat(userId));\n        };\n    }, [\n        userId,\n        currentUserId,\n        subscribeToMessages,\n        startHealthCheck\n    ]);\n    // Method để gửi message qua STOMP client\n    const sendMessage = (0,react__WEBPACK_IMPORTED_MODULE_1__.useCallback)((destination, message)=>{\n        var _clientRef_current;\n        if ((_clientRef_current = clientRef.current) === null || _clientRef_current === void 0 ? void 0 : _clientRef_current.connected) {\n            return clientRef.current.sendMessage(destination, message);\n        } else {\n            console.warn(\"⚠️ STOMP client is not connected\");\n            return false;\n        }\n    }, []);\n    // Get detailed connection status\n    const getConnectionInfo = (0,react__WEBPACK_IMPORTED_MODULE_1__.useCallback)(()=>{\n        const status = (0,_utils_socket__WEBPACK_IMPORTED_MODULE_2__.getStompClientStatus)();\n        return {\n            status: connectionStatus,\n            isConnected: status.connected,\n            isConnecting: status.connecting,\n            hasSubscription: !!subscriptionRef.current,\n            userId,\n            currentUserId,\n            subscriptions: status.subscriptions,\n            reconnectAttempts: status.reconnectAttempts\n        };\n    }, [\n        connectionStatus,\n        userId,\n        currentUserId\n    ]);\n    // Manual reconnect function - thực tế singleton tự reconnect\n    const reconnect = (0,react__WEBPACK_IMPORTED_MODULE_1__.useCallback)(()=>{\n        console.log(\"\\uD83D\\uDD04 Manual reconnect requested\");\n        setConnectionStatus(\"reconnecting\");\n        subscribeToMessages();\n    }, [\n        subscribeToMessages\n    ]);\n    return {\n        sendMessage,\n        getConnectionInfo,\n        connectionStatus,\n        reconnect\n    };\n}\n_s(useMessageNotification, \"IZ7Ma2ojd6IqlMGrgFiquXrqMaQ=\", false, function() {\n    return [\n        next_navigation__WEBPACK_IMPORTED_MODULE_6__.useRouter,\n        _store_ZustandStore__WEBPACK_IMPORTED_MODULE_4__[\"default\"]\n    ];\n});\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(app-pages-browser)/./src/hooks/useMessageNotification.js\n"));

/***/ })

});