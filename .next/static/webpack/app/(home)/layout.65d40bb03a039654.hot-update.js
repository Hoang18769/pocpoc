"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("app/(home)/layout",{

/***/ "(app-pages-browser)/./src/hooks/useNotificationSocket.js":
/*!********************************************!*\
  !*** ./src/hooks/useNotificationSocket.js ***!
  \********************************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": function() { return /* binding */ useNotificationSocket; }\n/* harmony export */ });\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ \"(app-pages-browser)/./node_modules/next/dist/compiled/react/index.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _utils_socket__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @/utils/socket */ \"(app-pages-browser)/./src/utils/socket.js\");\n/* harmony import */ var react_hot_toast__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! react-hot-toast */ \"(app-pages-browser)/./node_modules/react-hot-toast/dist/index.mjs\");\n/* harmony import */ var _store_ZustandStore__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @/store/ZustandStore */ \"(app-pages-browser)/./src/store/ZustandStore.js\");\n/* __next_internal_client_entry_do_not_use__ default auto */ var _s = $RefreshSig$();\n\n\n\n\nfunction useNotificationSocket(userId) {\n    _s();\n    const subscriptionRef = (0,react__WEBPACK_IMPORTED_MODULE_0__.useRef)(null);\n    const isSubscribedRef = (0,react__WEBPACK_IMPORTED_MODULE_0__.useRef)(false);\n    // Store actions\n    const { fetchChatList, onMessageReceived, onChatCreated, fetchNotifications, onNotificationReceived } = (0,_store_ZustandStore__WEBPACK_IMPORTED_MODULE_3__[\"default\"])();\n    (0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)(()=>{\n        if (!userId) return;\n        let isMounted = true;\n        const handleNotification = async (data)=>{\n            var _data_creator;\n            if (!(data === null || data === void 0 ? void 0 : data.action)) {\n                console.warn(\"⚠️ Notification kh\\xf4ng hợp lệ:\", data);\n                return;\n            }\n            const name = ((_data_creator = data.creator) === null || _data_creator === void 0 ? void 0 : _data_creator.givenName) || \"ai đ\\xf3\";\n            // === Toast & store updates by action ===\n            switch(data.action){\n                case \"SENT_ADD_FRIEND_REQUEST\":\n                    (0,react_hot_toast__WEBPACK_IMPORTED_MODULE_2__[\"default\"])(\"\".concat(name, \" đ\\xe3 gửi lời mời kết bạn \\uD83D\\uDC8C\"));\n                    break;\n                case \"BE_FRIEND\":\n                case \"ACCEPTED_FRIEND_REQUEST\":\n                    (0,react_hot_toast__WEBPACK_IMPORTED_MODULE_2__[\"default\"])(\"\".concat(name, \" đ\\xe3 trở th\\xe0nh bạn b\\xe8 \\uD83D\\uDC65\"));\n                    break;\n                case \"POST\":\n                    (0,react_hot_toast__WEBPACK_IMPORTED_MODULE_2__[\"default\"])(\"\".concat(name, \" đ\\xe3 đăng một b\\xe0i viết mới\"));\n                    break;\n                case \"SHARE\":\n                    (0,react_hot_toast__WEBPACK_IMPORTED_MODULE_2__[\"default\"])(\"\".concat(name, \" đ\\xe3 chia sẻ một b\\xe0i viết mới\"));\n                    break;\n                case \"LIKE_POST\":\n                    (0,react_hot_toast__WEBPACK_IMPORTED_MODULE_2__[\"default\"])(\"\".concat(name, \" đ\\xe3 th\\xedch b\\xe0i viết của bạn ❤️\"));\n                    break;\n                case \"COMMENT\":\n                    (0,react_hot_toast__WEBPACK_IMPORTED_MODULE_2__[\"default\"])(\"\".concat(name, \" đ\\xe3 b\\xecnh luận về b\\xe0i viết của bạn \\uD83D\\uDCAC\"));\n                    break;\n                case \"REPLY_COMMENT\":\n                    (0,react_hot_toast__WEBPACK_IMPORTED_MODULE_2__[\"default\"])(\"\".concat(name, \" đ\\xe3 trả lời b\\xecnh luận của bạn \\uD83D\\uDCAC\"));\n                    break;\n                case \"NEW_MESSAGE\":\n                    {\n                        (0,react_hot_toast__WEBPACK_IMPORTED_MODULE_2__[\"default\"])(\"\".concat(name, \" đ\\xe3 nhắn tin cho bạn \\uD83D\\uDCAC\"));\n                        try {\n                            if (!data.message || !data.message.senderUsername) break;\n                            const senderUsername = data.message.senderUsername;\n                            // Truy xuất chatList từ store\n                            const { chatList } = _store_ZustandStore__WEBPACK_IMPORTED_MODULE_3__[\"default\"].getState();\n                            const foundChat = chatList.find((chat)=>{\n                                var _chat_target;\n                                return ((_chat_target = chat.target) === null || _chat_target === void 0 ? void 0 : _chat_target.username) === senderUsername;\n                            });\n                            if (foundChat) {\n                                const updatedChat = {\n                                    ...foundChat,\n                                    lastMessage: {\n                                        ...foundChat.lastMessage,\n                                        body: data.message.body\n                                    },\n                                    updatedAt: data.message.createdAt || new Date().toISOString(),\n                                    notReadMessageCount: (foundChat.notReadMessageCount || 0) + 1\n                                };\n                                // Tạo chatList mới: chat này đứng đầu, còn lại giữ nguyên nhưng sắp theo updatedAt\n                                const newChatList = [\n                                    updatedChat,\n                                    ...chatList.filter((chat)=>chat.id !== foundChat.id).sort((a, b)=>new Date(a.updatedAt) - new Date(b.updatedAt))\n                                ];\n                                _store_ZustandStore__WEBPACK_IMPORTED_MODULE_3__[\"default\"].setState({\n                                    chatList: newChatList\n                                });\n                                console.log(\"\\uD83D\\uDCE5 Cập nhật chatList với NEW_MESSAGE từ\", senderUsername);\n                            } else {\n                                console.log(\"\\uD83D\\uDD0D Kh\\xf4ng t\\xecm thấy chat với\", senderUsername, \"- giữ nguy\\xean danh s\\xe1ch.\");\n                            }\n                            // Optionally gọi lại onMessageReceived để cập nhật nếu bạn vẫn muốn\n                            _store_ZustandStore__WEBPACK_IMPORTED_MODULE_3__[\"default\"].getState().onMessageReceived(data.message);\n                        } catch (err) {\n                            console.error(\"❌ Failed to process NEW_MESSAGE:\", err);\n                        }\n                        break;\n                    }\n                case \"NEW_CHAT_CREATED\":\n                    if (data.chat) {\n                        onChatCreated(data.chat);\n                        (0,react_hot_toast__WEBPACK_IMPORTED_MODULE_2__[\"default\"])(\"\".concat(name, \" đ\\xe3 tạo cuộc tr\\xf2 chuyện mới \\uD83D\\uDCAC\"));\n                    }\n                    break;\n                default:\n                    (0,react_hot_toast__WEBPACK_IMPORTED_MODULE_2__[\"default\"])(\"\\uD83D\\uDD14 C\\xf3 th\\xf4ng b\\xe1o mới từ \".concat(name));\n            }\n            // ✅ Đồng bộ thông báo vào store\n            if (onNotificationReceived && fetchNotifications) {\n                onNotificationReceived(data); // Tạm thời hiển thị ngay\n            // Sync lại từ server để đảm bảo không thiếu\n            // setTimeout(() => {\n            //   fetchNotifications(true);\n            // }, 300);\n            //  // delay nhẹ tránh spam call nếu nhận liên tục\n            }\n        };\n        // === Setup socket client với singleton ===\n        const setupConnection = async ()=>{\n            try {\n                console.log(\"\\uD83D\\uDD0C Connecting to notification socket for user:\", userId);\n                const client = await (0,_utils_socket__WEBPACK_IMPORTED_MODULE_1__.getStompClient)(()=>{\n                    if (!isMounted || isSubscribedRef.current) return;\n                    console.log(\"\\uD83D\\uDD0C Subscribing to /notifications/\" + userId);\n                    try {\n                        subscriptionRef.current = client.subscribeToChannel(\"/notifications/\".concat(userId), (message)=>{\n                            if (!isMounted) return;\n                            try {\n                                const data = JSON.parse(message.body);\n                                console.log(\"\\uD83D\\uDCE8 Notification received:\", data);\n                                handleNotification(data);\n                            } catch (err) {\n                                console.error(\"❌ Kh\\xf4ng thể parse message:\", err);\n                            }\n                        });\n                        if (subscriptionRef.current) {\n                            isSubscribedRef.current = true;\n                            console.log(\"✅ Successfully subscribed to notifications\");\n                        }\n                    } catch (err) {\n                        console.error(\"❌ Lỗi khi subscribe:\", err);\n                    }\n                });\n                // Nếu client đã connected và chưa subscribe\n                if ((client === null || client === void 0 ? void 0 : client.connected) && !isSubscribedRef.current) {\n                    console.log(\"\\uD83D\\uDD0C Client already connected, subscribing immediately\");\n                    try {\n                        subscriptionRef.current = client.subscribeToChannel(\"/notifications/\".concat(userId), (message)=>{\n                            if (!isMounted) return;\n                            try {\n                                const data = JSON.parse(message.body);\n                                console.log(\"\\uD83D\\uDCE8 Notification received:\", data);\n                                handleNotification(data);\n                            } catch (err) {\n                                console.error(\"❌ Kh\\xf4ng thể parse message:\", err);\n                            }\n                        });\n                        if (subscriptionRef.current) {\n                            isSubscribedRef.current = true;\n                            console.log(\"✅ Successfully subscribed to notifications\");\n                        }\n                    } catch (err) {\n                        console.error(\"❌ Lỗi khi subscribe:\", err);\n                    }\n                }\n            } catch (err) {\n                console.error(\"❌ Lỗi khi setup connection:\", err);\n            }\n        };\n        setupConnection();\n        return ()=>{\n            isMounted = false;\n            if (subscriptionRef.current) {\n                try {\n                    subscriptionRef.current.unsubscribe();\n                    console.log(\"\\uD83D\\uDCE4 Đ\\xe3 hủy đăng k\\xfd /notifications/\" + userId);\n                } catch (err) {\n                    console.warn(\"⚠️ Lỗi khi hủy đăng k\\xfd:\", err);\n                }\n                subscriptionRef.current = null;\n            }\n            isSubscribedRef.current = false;\n        };\n    }, [\n        userId,\n        fetchChatList,\n        onMessageReceived,\n        onChatCreated,\n        fetchNotifications,\n        onNotificationReceived\n    ]);\n}\n_s(useNotificationSocket, \"x9YOoR/S79EaGIe0oW6AGu6Cml0=\", false, function() {\n    return [\n        _store_ZustandStore__WEBPACK_IMPORTED_MODULE_3__[\"default\"]\n    ];\n});\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(app-pages-browser)/./src/hooks/useNotificationSocket.js\n"));

/***/ })

});