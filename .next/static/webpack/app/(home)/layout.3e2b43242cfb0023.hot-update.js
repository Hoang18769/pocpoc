"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("app/(home)/layout",{

/***/ "(app-pages-browser)/./src/hooks/useSendMessageSocket.js":
/*!*******************************************!*\
  !*** ./src/hooks/useSendMessageSocket.js ***!
  \*******************************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": function() { return /* binding */ useSendMessage; }\n/* harmony export */ });\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ \"(app-pages-browser)/./node_modules/next/dist/compiled/react/index.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _utils_socket__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @/utils/socket */ \"(app-pages-browser)/./src/utils/socket.js\");\n/* __next_internal_client_entry_do_not_use__ default auto */ var _s = $RefreshSig$();\n\n\nfunction useSendMessage(param) {\n    let { chatId, receiverUsername } = param;\n    _s();\n    const clientRef = (0,react__WEBPACK_IMPORTED_MODULE_0__.useRef)(null);\n    const [isConnected, setIsConnected] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(false);\n    const [isInitializing, setIsInitializing] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(false);\n    const statusCheckRef = (0,react__WEBPACK_IMPORTED_MODULE_0__.useRef)(null);\n    // Initialize connection\n    const initializeClient = (0,react__WEBPACK_IMPORTED_MODULE_0__.useCallback)(async ()=>{\n        if (isInitializing) return;\n        setIsInitializing(true);\n        try {\n            console.log(\"\\uD83D\\uDD0C Initializing STOMP client for sending messages...\");\n            // Get singleton client instance\n            const client = await (0,_utils_socket__WEBPACK_IMPORTED_MODULE_1__.getStompClient)((frame)=>{\n                console.log(\"✅ STOMP connected for sending\", frame);\n                setIsConnected(true);\n            });\n            clientRef.current = client;\n            // Check if already connected\n            if (client && client.connected) {\n                setIsConnected(true);\n                console.log(\"✅ Client already connected\");\n            }\n        } catch (error) {\n            console.error(\"❌ Failed to initialize STOMP client:\", error);\n            setIsConnected(false);\n        } finally{\n            setIsInitializing(false);\n        }\n    }, []);\n    // Status monitoring\n    const startStatusMonitoring = (0,react__WEBPACK_IMPORTED_MODULE_0__.useCallback)(()=>{\n        if (statusCheckRef.current) {\n            clearInterval(statusCheckRef.current);\n        }\n        statusCheckRef.current = setInterval(()=>{\n            const status = (0,_utils_socket__WEBPACK_IMPORTED_MODULE_1__.getStompClientStatus)();\n            const newConnectionState = status.connected;\n            if (newConnectionState !== isConnected) {\n                setIsConnected(newConnectionState);\n                console.log(\"\\uD83D\\uDD04 Connection status changed: \".concat(newConnectionState));\n            }\n            // If not connected and not initializing, try to reconnect\n            if (!newConnectionState && !isInitializing) {\n                console.log(\"\\uD83D\\uDD04 Auto-reconnecting for send message...\");\n                initializeClient();\n            }\n        }, 5000);\n    }, [\n        isConnected,\n        isInitializing,\n        initializeClient\n    ]);\n    // Setup effect\n    (0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)(()=>{\n        let isMounted = true;\n        const setup = async ()=>{\n            if (!isMounted) return;\n            await initializeClient();\n            startStatusMonitoring();\n        };\n        setup();\n        return ()=>{\n            isMounted = false;\n            // Clear status monitoring\n            if (statusCheckRef.current) {\n                clearInterval(statusCheckRef.current);\n                statusCheckRef.current = null;\n            }\n            // Don't disconnect the client as it's shared\n            // Just clear our reference\n            clientRef.current = null;\n            setIsConnected(false);\n            setIsInitializing(false);\n            console.log(\"\\uD83D\\uDD0C useSendMessage cleanup completed\");\n        };\n    }, [\n        initializeClient,\n        startStatusMonitoring\n    ]);\n    // Send message function\n    const sendMessage = (0,react__WEBPACK_IMPORTED_MODULE_0__.useCallback)(async (text)=>{\n        console.log(\"\\uD83D\\uDCE1 Attempting to send message...\");\n        // Get current client status\n        const status = (0,_utils_socket__WEBPACK_IMPORTED_MODULE_1__.getStompClientStatus)();\n        const client = clientRef.current;\n        console.log(\"\\uD83D\\uDCCA Send status check:\", {\n            hasClient: !!client,\n            clientConnected: client === null || client === void 0 ? void 0 : client.connected,\n            statusConnected: status.connected,\n            stateConnected: isConnected,\n            isInitializing\n        });\n        // If not connected, try to get/reconnect client\n        if (!client || !client.connected || !status.connected) {\n            console.log(\"\\uD83D\\uDD04 Client not ready, attempting to reconnect...\");\n            try {\n                const freshClient = await (0,_utils_socket__WEBPACK_IMPORTED_MODULE_1__.getStompClient)();\n                clientRef.current = freshClient;\n                if (!freshClient.connected) {\n                    console.warn(\"⚠️ STOMP client still not connected after refresh\");\n                    return {\n                        success: false,\n                        error: \"Connection not available\"\n                    };\n                }\n            } catch (error) {\n                console.error(\"❌ Failed to get fresh client:\", error);\n                return {\n                    success: false,\n                    error: \"Failed to establish connection\"\n                };\n            }\n        }\n        // Validate input\n        if (!text || !text.trim()) {\n            console.warn(\"⚠️ Empty message text\");\n            return {\n                success: false,\n                error: \"Message text is required\"\n            };\n        }\n        // Prepare message data\n        const messageData = {\n            chatId: chatId || null,\n            username: receiverUsername === null || receiverUsername === void 0 ? void 0 : receiverUsername.trim(),\n            text: text.trim()\n        };\n        console.log(\"\\uD83D\\uDCE6 Sending message data:\", messageData);\n        try {\n            // Use the sendMessage method from singleton client\n            const success = clientRef.current.sendMessage(\"/app/chat\", messageData);\n            if (success) {\n                console.log(\"✅ Message sent successfully:\", messageData);\n                return {\n                    success: true,\n                    data: messageData\n                };\n            } else {\n                console.error(\"❌ Failed to send message - client method returned false\");\n                return {\n                    success: false,\n                    error: \"Send operation failed\"\n                };\n            }\n        } catch (error) {\n            console.error(\"❌ Exception while sending message:\", error);\n            return {\n                success: false,\n                error: error.message || \"Unknown error occurred\"\n            };\n        }\n    }, [\n        chatId,\n        receiverUsername,\n        isConnected,\n        isInitializing\n    ]);\n    // Manual reconnect function\n    const reconnect = (0,react__WEBPACK_IMPORTED_MODULE_0__.useCallback)(async ()=>{\n        console.log(\"\\uD83D\\uDD04 Manual reconnect requested for send message\");\n        setIsConnected(false);\n        await initializeClient();\n    }, [\n        initializeClient\n    ]);\n    // Get detailed status\n    const getDetailedStatus = (0,react__WEBPACK_IMPORTED_MODULE_0__.useCallback)(()=>{\n        var _clientRef_current;\n        const globalStatus = (0,_utils_socket__WEBPACK_IMPORTED_MODULE_1__.getStompClientStatus)();\n        return {\n            isConnected,\n            isInitializing,\n            hasClient: !!clientRef.current,\n            clientConnected: ((_clientRef_current = clientRef.current) === null || _clientRef_current === void 0 ? void 0 : _clientRef_current.connected) || false,\n            globalStatus,\n            chatId,\n            receiverUsername\n        };\n    }, [\n        isConnected,\n        isInitializing,\n        chatId,\n        receiverUsername\n    ]);\n    return {\n        sendMessage,\n        isConnected,\n        isInitializing,\n        reconnect,\n        getDetailedStatus\n    };\n}\n_s(useSendMessage, \"lmtvXTznnQuBwgyy1q4efQSa7EA=\");\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(app-pages-browser)/./src/hooks/useSendMessageSocket.js\n"));

/***/ })

});