"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("app/(home)/layout",{

/***/ "(app-pages-browser)/./src/hooks/useChat.js":
/*!******************************!*\
  !*** ./src/hooks/useChat.js ***!
  \******************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": function() { return /* binding */ useChat; }\n/* harmony export */ });\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ \"(app-pages-browser)/./node_modules/next/dist/compiled/react/index.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _utils_axios__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @/utils/axios */ \"(app-pages-browser)/./src/utils/axios.js\");\n/* harmony import */ var _utils_socket__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @/utils/socket */ \"(app-pages-browser)/./src/utils/socket.js\");\n/* harmony import */ var react_hot_toast__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! react-hot-toast */ \"(app-pages-browser)/./node_modules/react-hot-toast/dist/index.mjs\");\n/* harmony import */ var _store_ZustandStore__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @/store/ZustandStore */ \"(app-pages-browser)/./src/store/ZustandStore.js\");\n/* __next_internal_client_entry_do_not_use__ default auto */ var _s = $RefreshSig$();\n\n\n\n\n\nfunction useChat(chatId) {\n    _s();\n    const [messages, setMessages] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)([]);\n    const [loading, setLoading] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(true);\n    const [currentUserId, setCurrentUserId] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(null);\n    const clientRef = (0,react__WEBPACK_IMPORTED_MODULE_0__.useRef)(null);\n    const subscribedChatIdRef = (0,react__WEBPACK_IMPORTED_MODULE_0__.useRef)(null);\n    const intervalRef = (0,react__WEBPACK_IMPORTED_MODULE_0__.useRef)(null);\n    (0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)(()=>{\n        const uid = localStorage.getItem(\"userId\");\n        if (uid) setCurrentUserId(uid);\n    }, []);\n    // Hàm helper để cập nhật chatList\n    // Trong useChat hook, sửa updateChatList function:\n    const updateChatList = (newMessage)=>{\n        console.log(\"\\uD83D\\uDD04 Processing message for chatList:\", newMessage);\n        const { chatList } = _store_ZustandStore__WEBPACK_IMPORTED_MODULE_4__[\"default\"].getState();\n        console.log(\"\\uD83D\\uDCDC Current chatList:\", chatList);\n        const foundChat = chatList.find((c)=>c.chatId === chatId);\n        console.log(\"\\uD83D\\uDD0D Found chat:\", foundChat);\n        if (foundChat) {\n            var _newChatList_;\n            console.log(\"\\uD83D\\uDD0D Current latestMessage:\", foundChat.latestMessage); // ⭐ SỬA TÊN FIELD\n            console.log(\"\\uD83C\\uDD95 New message structure:\", {\n                id: newMessage.id,\n                content: newMessage.content,\n                sentAt: newMessage.sentAt,\n                sender: newMessage.sender\n            });\n            const updatedChat = {\n                ...foundChat,\n                // ⭐ SỬA TỪ lastMessage THÀNH latestMessage\n                latestMessage: {\n                    id: newMessage.id,\n                    content: newMessage.content,\n                    sentAt: newMessage.sentAt,\n                    sender: newMessage.sender,\n                    messageType: newMessage.messageType,\n                    attachment: newMessage.attachment,\n                    attachments: newMessage.attachments,\n                    deleted: newMessage.deleted || false\n                },\n                updatedAt: newMessage.sentAt,\n                notReadMessageCount: (foundChat.notReadMessageCount || 0) + (newMessage.isOwnMessage ? 0 : 1)\n            };\n            console.log(\"\\uD83C\\uDD95 UpdatedChat latestMessage:\", updatedChat.latestMessage);\n            const otherChats = chatList.filter((c)=>c.chatId !== chatId);\n            const newChatList = [\n                ...otherChats,\n                updatedChat\n            ].sort((a, b)=>new Date(b.updatedAt).getTime() - new Date(a.updatedAt).getTime());\n            console.log(\"\\uD83D\\uDCDC New chatList first item latestMessage:\", (_newChatList_ = newChatList[0]) === null || _newChatList_ === void 0 ? void 0 : _newChatList_.latestMessage);\n            // Force update bằng cách tạo object mới hoàn toàn\n            _store_ZustandStore__WEBPACK_IMPORTED_MODULE_4__[\"default\"].setState({\n                chatList: newChatList.map((chat)=>({\n                        ...chat\n                    }))\n            });\n            console.log(\"✅ ChatList updated successfully!\");\n            // Verify update\n            setTimeout(()=>{\n                var _updatedList_find;\n                const { chatList: updatedList } = _store_ZustandStore__WEBPACK_IMPORTED_MODULE_4__[\"default\"].getState();\n                console.log(\"\\uD83D\\uDD0D Verified latestMessage after update:\", (_updatedList_find = updatedList.find((c)=>c.chatId === chatId)) === null || _updatedList_find === void 0 ? void 0 : _updatedList_find.latestMessage);\n            }, 100);\n        } else {\n            console.warn(\"⚠️ Kh\\xf4ng t\\xecm thấy chat với chatId: \".concat(chatId));\n        }\n    };\n    (0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)(()=>{\n        if (!chatId) return;\n        const fetchMessages = async ()=>{\n            try {\n                setLoading(true);\n                const res = await _utils_axios__WEBPACK_IMPORTED_MODULE_1__[\"default\"].get(\"/v1/chat/messages/\".concat(chatId, \"?page=0&size=100\"));\n                setMessages(res.data.body || []);\n            } catch (err) {\n                console.error(\"❌ Lỗi tải tin nhắn:\", err);\n                setMessages([]);\n            } finally{\n                setLoading(false);\n            }\n        };\n        fetchMessages();\n    }, [\n        chatId,\n        currentUserId\n    ]);\n    (0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)(()=>{\n        var _clientRef_current;\n        if (!chatId || !currentUserId) return;\n        if (((_clientRef_current = clientRef.current) === null || _clientRef_current === void 0 ? void 0 : _clientRef_current.connected) && subscribedChatIdRef.current === chatId) return;\n        const client = (0,_utils_socket__WEBPACK_IMPORTED_MODULE_2__.createStompClient)();\n        clientRef.current = client;\n        client.onConnect = ()=>{\n            console.log(\"\\uD83D\\uDD0C Connected to WebSocket [chat:\".concat(chatId, \"]\"));\n            client.subscribe(\"/chat/\".concat(chatId), (message)=>{\n                try {\n                    var _data_sender, _data_sender1;\n                    const data = JSON.parse(message.body);\n                    console.log(\"\\uD83D\\uDCE9 Received:\", data);\n                    if (data.command === \"DELETE\") {\n                        setMessages((prev)=>prev.map((msg)=>msg.id === data.id ? {\n                                    ...msg,\n                                    content: \"[Tin nhắn đ\\xe3 bị x\\xf3a]\",\n                                    deleted: true\n                                } : msg));\n                        return;\n                    }\n                    if (data.command === \"EDIT\") {\n                        var _data_sender2;\n                        setMessages((prev)=>prev.map((msg)=>msg.id === data.id ? {\n                                    ...msg,\n                                    content: data.message,\n                                    edited: true,\n                                    editedAt: data.editedAt || new Date().toISOString()\n                                } : msg));\n                        if (((_data_sender2 = data.sender) === null || _data_sender2 === void 0 ? void 0 : _data_sender2.id) !== currentUserId) {\n                            (0,react_hot_toast__WEBPACK_IMPORTED_MODULE_3__.toast)(\"✏️ \".concat(data.sender.username, \" đ\\xe3 chỉnh sửa tin nhắn\"), {\n                                duration: 3000,\n                                position: \"top-right\"\n                            });\n                        }\n                        return;\n                    }\n                    // NEW MESSAGE\n                    const newMessage = {\n                        ...data,\n                        isOwnMessage: ((_data_sender = data.sender) === null || _data_sender === void 0 ? void 0 : _data_sender.id) === currentUserId\n                    };\n                    console.log(\"\\uD83D\\uDCE9 Processing new message:\", newMessage);\n                    console.log(\"\\uD83C\\uDD94 Current userId:\", currentUserId);\n                    console.log(\"\\uD83C\\uDD94 Sender ID:\", (_data_sender1 = data.sender) === null || _data_sender1 === void 0 ? void 0 : _data_sender1.id);\n                    // Cập nhật messages state\n                    setMessages((prev)=>{\n                        console.log(\"\\uD83D\\uDCDD Previous messages count:\", prev.length);\n                        const newMessages = [\n                            newMessage,\n                            ...prev\n                        ];\n                        console.log(\"\\uD83D\\uDCDD New messages count:\", newMessages.length);\n                        return newMessages;\n                    });\n                    // Cập nhật chatList ngay lập tức - không dùng state\n                    // Sử dụng requestAnimationFrame để đảm bảo DOM đã render\n                    requestAnimationFrame(()=>{\n                        updateChatList(newMessage);\n                    });\n                    if (data.sender && data.content && !newMessage.isOwnMessage) {\n                        (0,react_hot_toast__WEBPACK_IMPORTED_MODULE_3__.toast)(\"\\uD83D\\uDCAC \".concat(data.sender.username, \": \").concat(data.content), {\n                            duration: 4000,\n                            position: \"top-right\"\n                        });\n                    }\n                } catch (err) {\n                    console.error(\"❌ Error parsing message:\", err);\n                }\n            });\n            subscribedChatIdRef.current = chatId;\n            client.onDisconnect = ()=>{\n                console.warn(\"\\uD83D\\uDD0C Disconnected from WebSocket [chat:\".concat(chatId, \"]\"));\n                subscribedChatIdRef.current = null;\n            };\n            client.onStompError = (frame)=>{\n                console.error(\"❌ STOMP error:\", frame);\n            };\n            client.onWebSocketError = (err)=>{\n                console.error(\"❌ WebSocket error:\", err);\n            };\n        };\n        client.activate();\n        intervalRef.current = setInterval(()=>{\n            if (!client.connected && (0,_utils_axios__WEBPACK_IMPORTED_MODULE_1__.isTokenValid)()) {\n                console.log(\"\\uD83D\\uDD01 Reconnecting to chat:\".concat(chatId, \"...\"));\n                client.deactivate().then(()=>{\n                    const newClient = (0,_utils_socket__WEBPACK_IMPORTED_MODULE_2__.createStompClient)();\n                    clientRef.current = newClient;\n                    subscribedChatIdRef.current = null;\n                    newClient.onConnect = client.onConnect;\n                    newClient.activate();\n                });\n            } else {\n                console.log(\"[chat:\".concat(chatId, \"] Status: \").concat(client.connected ? \"✅ connected\" : \"❌ disconnected\"));\n            }\n        }, 15000);\n        return ()=>{\n            client.deactivate();\n            clearInterval(intervalRef.current);\n            subscribedChatIdRef.current = null;\n            console.log(\"❌ Cleaned up WebSocket [chat:\".concat(chatId, \"]\"));\n        };\n    }, [\n        chatId,\n        currentUserId\n    ]);\n    return {\n        messages,\n        loading,\n        currentUserId\n    };\n}\n_s(useChat, \"p6IPR72rh56zBBuYVabYBEsyhHw=\");\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(app-pages-browser)/./src/hooks/useChat.js\n"));

/***/ })

});